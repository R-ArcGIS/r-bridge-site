{
  "hash": "4b8b13d341556eaee2feaf1b7c77e6b9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Using `arcgis` with `arcgisbinding`\"\nsubtitle: \"Combining the two packages for workflows that span ArcGIS Pro and ArcGIS location services\"\nfreeze: true\n--- \n\n\n\n\nWhile both are components of the R-ArcGIS Bridge, `arcgis` and `arcgisbinding` serve distinct purposes: \n\n- `arcgis` *bridges* to ArcGIS location services, enabling web-based workflows from R\n- `arcgisbinding` *binds* to ArcGIS Pro, enabling data i/o and other desktop software-based processes from R\n\nHowever, there may be instances where you want to combine the functionality of these two R packages in a single workflow. The below code samples demonstrate how these packages can be used together, as well as alongside popular spatial R packages like `terra` and `sf`.\n\n## Extract imagery of the Ouarkziz crater\n#### *(from `arcgis` to `arcgisbinding`)*\n\nThis sample shows how to extract multispectral Landsat imagery from ArcGIS Living Atlas using `arcgis` and subsequently resample or reproject it using `arcgisbinding`. Both packages also work with `terra`, so you can easily plot, write, and integrate with other R-based raster analysis workflows.\n\n\n```r\n# install.packages('arcgis')\n\nlibrary(terra)\nlibrary(arcgis)\nlibrary(arcgisbinding)\narc.check_product()\n\n# use arcgis to access imagery from ArcGIS Living Atlas\nrurl <- \"https://landsat2.arcgis.com/arcgis/rest/services/Landsat/MS/ImageServer\"\n\nimg_srv <- arc_open(rurl)\n\nimg <- arc_raster(\n  img_srv,\n  \"-846028\", # xmin\n  \"-833783\", # xmax\n  \"3373101\", # ymin\n  \"3380738\", # ymax\n)\n\n# use terra to plot\nplotRGB(img, stretch = \"lin\")\n\n# use arcgisbdinding to resample?\n# use arcgisbinding to project?\n\n# use terra to write out the raster\nwriteRaster(img, \"ouarkziz-crater.tif\", overwrite=TRUE)\n```\n\n![](images/ouarkziz-crater.png)\n\nData Source: [Multispectral Landsat](https://www.arcgis.com/home/item.html?id=d9b466d6a9e647ce8d1dd5fe12eb434b) \n\n[Learn more about the Ouarkziz crater in Algeria.](https://earthobservatory.nasa.gov/images/77851/ouarkziz-impact-crater-algeria)\n\n\n## Use local data to update an ArcGIS Online feature service\n#### *(from `arcgisbinding` to `arcgis`)*\n\nIn this sample, `arcgisbinding` reads and converts a local feature class to `sf`, and then `arcgis` uses the `sf` object to update an ArcGIS Online feature service.\n\n```r\n# install.packages('arcgis')\n\nlibrary(sf)\nlibrary(arcgis)\nlibrary(arcgisbinding)\narc.check_product()\n\n# use arcgisbinding to read in feature class\nfcpath = \"C:\\\\Data\\\\FARS_update.gdb\\\\FARS_2021\"\n\nfc <- arc.open(fcpath)\n\nsqlquery <- \"STATENAME = 'Missouri'\"\n\nfcdata <- arc.select(fc, where_clause=sqlquery)\n\nsfdata <- arc.data2sf(fcdata) # project to 3857\n\n# use arcgis to access feature service\ntoken <- auth_code() # review connecting-to-a-portal to get more info\n\nset_arc_token(token)\n\nfsurl <- \"https://services1.arcgis.com/hLJbHVT9ZrDIzK0I/arcgis/rest/services/Fatal_Vehicle_Accidents_in_Missouri/FeatureServer/0\"\n\nflyr <- arc_open(fsurl)\nflyr\n\n# use sf to project new data to the same crs as flyr\nsfdataprj <- st_transform(sfdata, st_crs(flyr))\n\n# use arcgis to add the new features\nadd_res <- add_features(flyr, sfdataprj)\nadd_res\n\nflyr <- refresh_layer(flyr)\nflyr\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}